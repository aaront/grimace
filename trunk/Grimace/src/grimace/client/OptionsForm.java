/**
 * OptionsForm.java
 *
 * @author Justin Cole
 *
 * Copyright (C) 2009 Justin Cole, Aaron Jankun, David Marczak, Vineet Sharma,
 *        and Aaron Toth
 *
 * This file is part of Wernicke.
 *
 * Wernicke is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package grimace.client;

public class OptionsForm extends javax.swing.JPanel {
    ProgramSettings settings;

    /** Creates new form OptionsForm */
    public OptionsForm(ProgramSettings currentSettings) {
        initComponents();
        settings = currentSettings;
        serverAddress.setText(settings.getServerAddress());
        serverPort.setText(Integer.toString(settings.getServerPort()));
        showInTray.setSelected(settings.getShowInTray());
        showEmoticons.setSelected(settings.getShowEmoticons());
        recordChatLogs.setSelected(settings.getRecordChatLogs());
        showEquationEditor.setSelected(settings.getShowEquationEditor());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        serverPort = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        showInTray = new javax.swing.JCheckBox();
        showEmoticons = new javax.swing.JCheckBox();
        recordChatLogs = new javax.swing.JCheckBox();
        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        serverAddress = new javax.swing.JTextField();
        showEquationEditor = new javax.swing.JCheckBox();

        jLabel1.setText("Server IP");

        serverPort.setText("4422");

        jLabel2.setText("Server Port");

        showInTray.setText("Show icon in system tray");

        showEmoticons.setText("Show emoticons in chats");

        recordChatLogs.setText("Automatically save chat logs");

        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        serverAddress.setText("127.0.0.1");

        showEquationEditor.setText("Always show equation editor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showEmoticons)
                    .addComponent(showInTray)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(serverAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serverPort)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(recordChatLogs)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cancelButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(acceptButton))
                        .addComponent(showEquationEditor, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serverPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(showInTray)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showEmoticons)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordChatLogs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showEquationEditor)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(acceptButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // @TODO: Notify parent container to re-organize and destroy form
        String value = serverAddress.getText();
        if (!value.equals(settings.getServerAddress())) {
            settings.setServerAddress(value);
        }
        value = serverPort.getText();
        if (!value.equals(Integer.toString(settings.getServerPort()))) {
            settings.setServerPort(Integer.valueOf(value).intValue());
        }
        Boolean enabled = showInTray.isSelected();
        if (!enabled.equals(settings.getShowInTray())) {
            settings.setShowInTray(enabled);
        }
        enabled = showEmoticons.isSelected();
        if (!enabled.equals(settings.getShowEmoticons())) {
            settings.setShowEmoticons(enabled);
        }
        enabled = recordChatLogs.isSelected();
        if (!enabled.equals(settings.getRecordChatLogs())) {
            settings.setRecordChatLogs(enabled);
        }
        enabled = showEquationEditor.isSelected();
        if (!enabled.equals(settings.getShowEquationEditor())) {
            settings.setShowEquationEditor(enabled);
        }
        this.setVisible(false);
        this.getParent().validate();
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
        this.getParent().validate();
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox recordChatLogs;
    private javax.swing.JTextField serverAddress;
    private javax.swing.JTextField serverPort;
    private javax.swing.JCheckBox showEmoticons;
    private javax.swing.JCheckBox showEquationEditor;
    private javax.swing.JCheckBox showInTray;
    // End of variables declaration//GEN-END:variables
}