/**
 * ChatToolbar.java
 *
 * @author Aaron Toth
 *
 * Copyright (C) 2009 Justin Cole, Aaron Jankun, David Marczak, Vineet Sharma,
 *        and Aaron Toth
 *
 * This file is part of Wernicke.
 *
 * Wernicke is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package grimace.client;

import java.awt.GraphicsEnvironment;
import java.awt.Color;
import java.awt.Font;

import javax.swing.JColorChooser;

public class ChatToolbar extends javax.swing.JPanel {

    private Color currentFontColor;
    private ChatBox cb;

    /** Creates new form ChatToolbar */
    public ChatToolbar(ChatBox cb) {
        initComponents();
        this.cb = cb;

        // Filling the font selector with available fonts
        GraphicsEnvironment e = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String[] availableFonts = e.getAvailableFontFamilyNames();
        Integer[] fontSizes = {8, 9, 10, 11, 12, 13, 14, 16, 18, 24, 36, 48, 72, 96};

        fontSelector.setModel(new javax.swing.DefaultComboBoxModel(availableFonts));
        sizeSelector.setModel(new javax.swing.DefaultComboBoxModel(fontSizes));

        // @TODO: Fill in with proper stuff when ProgramController is all hooked up and shit
        fontSelector.setSelectedItem(Account.DEFAULT_FONT);
        sizeSelector.setSelectedItem(Account.DEFAULT_FONT_SIZE);
        btnColour.setForeground(Account.DEFAULT_FONT_COLOUR);

        // @TODO: Will be eventually replaced by getting the font from the account.
        Font newFont = new Font(Account.DEFAULT_FONT, Font.BOLD+Font.ITALIC, Account.DEFAULT_FONT_SIZE);
        setNewFont(newFont);
    }

    private void setNewFont(Font font) {
        if (font.isBold()) {
            bolden.setSelected(true);
        }
        if (font.isItalic()) {
            italicise.setSelected(true);
        }
    }

    public Color getCurrentFontColor() {
        return currentFontColor;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jToolBar1 = new javax.swing.JToolBar();
        bolden = new javax.swing.JToggleButton();
        italicise = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        fontSelector = new javax.swing.JComboBox();
        sizeSelector = new javax.swing.JComboBox();
        btnColour = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(400, 36));
        setMinimumSize(new java.awt.Dimension(400, 36));
        setPreferredSize(new java.awt.Dimension(600, 36));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(400, 36));
        jToolBar1.setMinimumSize(new java.awt.Dimension(156, 36));
        jToolBar1.setPreferredSize(new java.awt.Dimension(120, 36));

        bolden.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        bolden.setText("<html><strong>B</strong>");
        bolden.setFocusable(false);
        bolden.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bolden.setMaximumSize(new java.awt.Dimension(25, 28));
        bolden.setMinimumSize(new java.awt.Dimension(25, 28));
        bolden.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(bolden);

        italicise.setFont(new java.awt.Font("Lucida Grande", 0, 14));
        italicise.setText("<html><i>i</i>");
        italicise.setFocusable(false);
        italicise.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        italicise.setMaximumSize(new java.awt.Dimension(25, 28));
        italicise.setMinimumSize(new java.awt.Dimension(25, 28));
        italicise.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(italicise);
        jToolBar1.add(jSeparator2);

        fontSelector.setMaximumSize(new java.awt.Dimension(150, 27));
        fontSelector.setMinimumSize(new java.awt.Dimension(150, 27));
        fontSelector.setPreferredSize(new java.awt.Dimension(150, 27));
        jToolBar1.add(fontSelector);

        sizeSelector.setMaximumSize(new java.awt.Dimension(70, 27));
        sizeSelector.setMinimumSize(new java.awt.Dimension(70, 27));
        jToolBar1.add(sizeSelector);

        btnColour.setText("Color");
        btnColour.setFocusable(false);
        btnColour.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnColour.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnColour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColourActionPerformed(evt);
            }
        });
        jToolBar1.add(btnColour);
        jToolBar1.add(jSeparator1);

        jButton1.setText("Add Equation");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnColourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColourActionPerformed
        // TODO add your handling code here:
        currentFontColor = JColorChooser.showDialog(null, "Choose a new font color:", btnColour.getForeground());
        btnColour.setForeground(currentFontColor);
        this.cb.getCurrentMessageBox().setForeground(currentFontColor);
    }//GEN-LAST:event_btnColourActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton bolden;
    private javax.swing.JButton btnColour;
    private javax.swing.JComboBox fontSelector;
    private javax.swing.JToggleButton italicise;
    private javax.swing.JButton jButton1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JComboBox sizeSelector;
    // End of variables declaration//GEN-END:variables

}
